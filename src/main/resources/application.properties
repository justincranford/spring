# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html

#spring.profiles.active=default
#spring.profiles.default=default
#spring.profiles.include=alwaysactive

spring.output.ansi.enabled=detect
logging.charset.console=UTF-8
logging.charset.file=UTF-8
stderr.encoding=UTF-8
stdout.encoding=UTF-8
#logging.file.name=console.log
#logging.file.path=/var/log

logging.level.root=DEBUG
#logging.level.org.springframework=INFO
logging.level.org.apache.tomcat.util.net.jsse.JSSESupport=WARN
#org.springframework.security.web.session.HttpSessionEventPublisher=DEBUG
#logging.level.com.github.justincranford=TRACE
#logging.level.com.github.justincranford.spring=INFO
#logging.level.io.restassured=WARN
#logging.level.org.apache.http=OFF
#logging.level.org.springframework.web=WARN 

spring.application.name=Spring TX
#spring.application.admin.enabled=false
#spring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=SpringApplication
#spring.jmx.enabled=false
#spring.jmx.server=mbeanServer

spring.banner.location=classpath:/banner.txt
spring.banner.charset=UTF-8
spring.main.banner-mode=console
spring.main.lazy-initialization=false
spring.main.log-startup-info=true
spring.main.register-shutdown-hook=true
spring.main.webApplicationType=servlet

spring.security.user.name=invalid
spring.security.user.password=invalid
spring.security.user.roles=

# TCP/IP settings
server.address=localhost
server.port=8443
#server.compression.enabled=false
#server.http2.enabled=false
server.forward-headers-strategy=NATIVE
management.server.address: localhost
management.server.port: 9443

# TLS settings (Generator: https://ssl-config.mozilla.org/)
##################################################
server.ssl.enabled=false
server.ssl.protocol=TLS
#server.ssl.enabled-protocols=TLSv1.3
#server.ssl.ciphers=TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256
server.ssl.enabled-protocols=TLSv1.2,TLSv1.3
server.ssl.ciphers=ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256
##################################################
server.ssl.client-auth=want
##################################################
server.ssl.certificate=classpath:tls/server-cert.crt
server.ssl.certificate-private-key=classpath:tls/server-private-key.p8
##################################################
server.ssl.trust-certificate=classpath:tls/ca.crt
#server.ssl.trust-certificate-private-key=classpath:tls/server-certificates.crt
##################################################
#server.ssl.key-store-provider=SunJSSE
#server.ssl.key-store-type=PKCS12
#server.ssl.key-store=classpath:tls/server-keystore.p12
#server.ssl.key-store-password=serverkeystorepassword
#server.ssl.key-alias=server
#server.ssl.key-password=serverentrypassword
##################################################
#server.ssl.trust-store-provider=SunJSSE
#server.ssl.trust-store-type=PKCS12
#server.ssl.trust-store=classpath:tls/server-truststore.p12
#server.ssl.trust-store-password=servertruststorepassword
##################################################


spring.gson.pretty-printing=true
spring.gson.serialize-nulls=true

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:bootapp;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=true
#spring.datasource.url=jdbc:h2:file:/data/demo
spring.datasource.username=sa
spring.datasource.password=password
#spring.datasource.type=???
#spring.datasource.xa.data-source-class-name
#spring.datasource.xa.properties.*

spring.data.jpa.repositories.enabled=true
#spring.data.jdbc.repositories.enabled=false
#spring.data.ldap.repositories.enabled=false
#spring.jta.enabled=false

#spring.jpa.database=H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.open-in-view=true
#spring.jpa.hibernate.naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy
# JPA/Hinernate create schema first, then run optional schema.sql and data.sql scripts
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.platform=H2
#spring.jpa.properties.*
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.properties.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.show-sql=true
#spring.jpa.properties.hibernate.current_session_context_class=SpringSessionContext
#spring.jpa.properties.hibernate.default-schema=helloworld
#spring.jpa.properties.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT

#hibernate.max_fetch_depth = 3
#hibernate.jdbc.fetch_size = 50
#hibernate.jdbc.batch_size = 10
#PersistenceProviderClass(HibernatePersistenceProvider.class);

#spring.datasource.schema=initial-schema.sql
#spring.datasource.data=initial-data.sql
#spring.datasource.initialization-mode=always

# http://localhost:8082/h2-console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false


# Web
#spring.thymeleaf.enabled=false
#spring.thymeleaf.mode=HTML5
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true 
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

spring.web.locale=en_US
#spring.web.locale-resolver=accept-header

############################################################################################################################################
#spring.security.oauth2.client.provider.internal-oauth2-login.issuerUri=https://localhost:8443
spring.security.oauth2.client.provider.internal-oauth2-login.authorizationUri=https://localhost:8443/oauth2/authorize
spring.security.oauth2.client.provider.internal-oauth2-login.tokenUri=https://localhost:8443/oauth2/token
spring.security.oauth2.client.provider.internal-oauth2-login.tokenIntrospectionUri=https://localhost:8443/oauth2/introspect
spring.security.oauth2.client.provider.internal-oauth2-login.tokenRevocationUri=https://localhost:8443/oauth2/revoke"
spring.security.oauth2.client.provider.internal-oauth2-login.jwkSetUri=https://localhost:8443/oauth2/oauth2/jwks"
spring.security.oauth2.client.provider.internal-oauth2-login.oidcUserInfoUri=https://localhost:8443/userinfo"
spring.security.oauth2.client.provider.internal-oauth2-login.oidcClientRegistrationUri=https://localhost:8443/connect/register"
#spring.security.oauth2.client.provider.internal-oauth2-login.userInfoUri=https://localhost:8443/oauth2/v1/userinfo
#spring.security.oauth2.client.provider.internal-oauth2-login.userInfoAuthenticationMethod=header
#spring.security.oauth2.client.provider.internal-oauth2-login.userNameAttribute=sub
spring.security.oauth2.client.registration.internal-oauth2-login.clientName=Internal OAuth Login
spring.security.oauth2.client.registration.internal-oauth2-login.clientId=internal-oauth2-login
spring.security.oauth2.client.registration.internal-oauth2-login.clientSecret={noop}secret
spring.security.oauth2.client.registration.internal-oauth2-login.clientAuthenticationMethod=client_secret_basic
spring.security.oauth2.client.registration.internal-oauth2-login.authorizationGrantType=authorization_code
spring.security.oauth2.client.registration.internal-oauth2-login.scope=openid,profile,message.read,message.write
spring.security.oauth2.client.registration.internal-oauth2-login.redirectUri=https://localhost:8443/login/oauth2/code/internal-oauth2-login
spring.security.oauth2.client.registration.internal-oauth2-login.redirectUri=https://localhost:8443
############################################################################################################################################
